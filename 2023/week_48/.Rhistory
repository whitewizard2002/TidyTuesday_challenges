library("readr")
library("tidyverse")
#loading the dataset directly from github
rladies_chapters <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-11-21/rladies_chapters.csv')
#generating the histogram for the no of meetings held in each year
year_vec <- unique(rladies_chapters$year) #for knowing the number of years
year_vec <- rev(year_vec) # for organising for line graph
year_splits <- split(rladies_chapters,rladies_chapters$year) #splitting the data based on year values
len<-length(year_splits)
count<-vector(mode="integer") # an empty vector for representing count of no of meetings in each year
start<-1 #for giving the starting for count vector
for(i in year_splits){
count[start]=nrow(i)
start<-start+1
}
#plotting the no of meetings held in each year
x <- year_vec
y <- count
plot(x,y,type='l',lwd='3',col="red",main="total meetings",xlab="year",ylab="no of meetings")
#splitting furthur into online and offline meetings
online_count <- vector(mode="integer") # denoting no of meetings in each which were online
offline_count <- vector(mode="integer") # denoting no of meetings in each year which were offline or "in person"
start <- 1 #adjusting the index
for(i in year_splits){
temp_online_count <- nrow(filter(i,i$location=="online"))
temp_offline_count<- nrow(filter(i,i$location=="inperson"))
online_count[start]=temp_online_count
offline_count[start]=temp_offline_count
start<- start+1
}
#plotting the line graph for online meetings
lines(x,online_count,type='l',lwd="2",col="blue")
#plotting the line graph for in person meetings
lines(x,offline_count,type='l',lwd='1',col="green")
#providing the legend for each line graph
legend("topleft",legend=c("Total","online","inperson"),col=c("red","blue","green"),lty=1)
no_of_loc=length(unique(rladies_chapters$chapter))
View(rladies_chapters)
setwd("C:/Users/aadit/RStudio/TidyTuesday_challenges/2023/week_48")
library("tidyverse")
drwho_episodes <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-11-28/drwho_episodes.csv')
drwho_directors <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-11-28/drwho_directors.csv')
drwho_writers <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-11-28/drwho_writers.csv')
View(drwho_writers)
View(drwho_episodes)
View(drwho_directors)
View(drwho_episodes)
View(drwho_directors)
View(drwho_writers)
View(drwho_writers)
View(drwho_directors)
View(drwho_writers)
View(drwho_directors)
View(drwho_writers)
drwho_episodes
class(drwho_episodes)
drwho_episodes<-drwho_episodes[,-c(1)]
drwho_episodes
avg_duration<- avg(drwho_episodes$duration)
avg_duration<- mean(drwho_episodes$duration)
avg_duration<- floor(mean(drwho_episodes$duration))
summary(drwho_episodes$uk_viewers)
summary(drwho_episodes$rating) #for finding how statistics of rating of the episodes
summary(drwho_episodes$uk_viewers) #for finding the statistics of no of viewers
summary(drwho_episodes$duration) #for finding the statistics of duration of episodes
?split
drwho_episodes_splits<-split(drwho_episodes,drwho_episodes$type)
?count
count_episode<-0 #for determining the no of episodes which were of type "episode"
count_special<-0
for(i in drwho_episodes_splits){
if(i$type=='episode')
count_episode<-count(i)
else
count_special<-count(i)
}
print(i)
count(i)
print(i$type)
count_episode<-0 #for determining the no of episodes which were of type "episode"
count_special<-0
for(i in drwho_episodes_splits){
if(i$type[1]=="episode"){
count_episode<-count(i)
}
else{
count_special<-count(i)
}
}
View(count_episode)
View(count_special)
View(count_episode)
View(count_special)
View(count_episode)
for(i in drwho_episodes_splits){
if(i$type[1]=="episode"){
count_episode<-count(i)$n
}
else{
count_special<-count(i)$n
}
}
rm("avg_duration")
dates<-drwho_episodes$first_aired
viewer_count<-drwho_episodes$uk_viewers
temp<-c()
val<-0
val<-1
for(i in drwho_episodes$first_aired){
temp[val]<-val
val<-val+1
}
temp<-c(1:count(drwho_episodes))
temp<-c(1:count(drwho_episodes$first_aired))
?count
no_of_tuples<-count(drwho_episodes)
no_of_tuples<-count(drwho_episodes)$n
temp<-c(1:count(drwho_episodes)$n)
viewer_count<-drwho_episodes$uk_viewers
temp<-num(c(1:count(drwho_episodes)$n))
?plot
plot(temp,viewer_count,type = "l",color="red",main="date aired vs viewer count",xlab="dates",ylab="viewers (in millions)")
?plot
plot(temp,viewer_count,type = "l",col="red",main="date aired vs viewer count",xlab="dates",ylab="viewers (in millions)")
temp<-drwho_episodes$first_aired
viewer_count<-drwho_episodes$uk_viewers
plot(temp,viewer_count,type = "l",col="red",main="date aired vs viewer count",xlab="dates",ylab="viewers (in millions)")
at(max(drwho_episodes$uk_viewers))
?at
where(max(drwho_episodes$uk_viewers))
?where
which.max(drwho_episodes$uk_viewers))
which.max(drwho_episodes$uk_viewers)
plot(temp,viewer_count,type = "b",col="red",main="date aired vs viewer count",xlab="dates",ylab="viewers (in millions)")
plot(temp,viewer_count,type = "b",col="red",main="date aired vs viewer count",xlab="dates",ylab="viewers (in millions)",cex=".5")
plot(temp,viewer_count,type = "b",col="red",main="date aired vs viewer count",xlab="dates",ylab="viewers (in millions)",cex="5")
plot(temp,viewer_count,type = "b",col="red",main="date aired vs viewer count",xlab="dates",ylab="viewers (in millions)",cex="0.5")
?plot
plot(temp,viewer_count,type = "b",col="red",main="date aired vs viewer count",xlab="dates",ylab="viewers (in millions)",cex="2")
plot(temp,viewer_count,type = "b",col="red",main="date aired vs viewer count",xlab="dates",ylab="viewers (in millions)")
plot(temp,viewer_count,type = "b",col="red",main="date aired vs viewer count",xlab="dates",ylab="viewers (in millions)",cex=0.5)
plot(temp,viewer_count,type = "b",col="red",main="date aired vs viewer count",xlab="dates",ylab="viewers (in millions)",cex=0.3)
plot(temp,viewer_count,type = "b",col="red",main="date aired vs viewer count",xlab="dates",ylab="viewers (in millions)",cex=0.3,xlim=c(min(temp),max(temp)))
plot(temp,viewer_count,type = "l",col="red",main="date aired vs viewer count",xlab="dates",ylab="viewers (in millions)",cex=0.3,xlim=c(min(temp),max(temp)))
writers<-unique(drwho_writers$writer)
writers_split<-split(drwho_writers,unique(drwho_writers$writer))
View(writers_split)
writers_split<-split(drwho_writers,drwho_writers$writer)
View(writers_split)
for(i in writers_split){
print(i$story_number)
}
?filter
writers_split<-split(drwho_writers,drwho_writers$writer)
for(i in writers_split){
for(j in i$story_number){
temp<-filter(drwho_writers,drwho_writers$story_number==j)
i<-cbind(i,c(temp$uk_viewers))
}
}
for(i in writers_split){
for(j in i$story_number){
temp<-filter(drwho_writers,drwho_writers$story_number==j)
# i<-cbind(i,c(temp$uk_viewers))
print(temp)
}
}
for(i in writers_split){
for(j in i$story_number){
temp<-filter(drwho_episodes,drwho_writers$story_number==j)
# i<-cbind(i,c(temp$uk_viewers))
print(temp)
}
}
for(i in writers_split){
for(j in i$story_number){
temp<-filter(drwho_episodes,drwho_episodes$story_number==j)
# i<-cbind(i,c(temp$uk_viewers))
print(temp)
}
}
for(i in writers_split){
for(j in i$story_number){
temp<-filter(drwho_episodes,drwho_episodes$story_number==j)
# i<-cbind(i,c(temp$uk_viewers))
print(temp$uk_viewers)
}
}
writers_split<-split(drwho_writers,drwho_writers$writer)
for(i in writers_split){
for(j in i$story_number){
temp<-filter(drwho_episodes,drwho_episodes$story_number==j)
i<-cbind(i,c(temp$uk_viewers))
}
}
View(writers_split)
temp_2<-c()
i<-length(temp_2)
len<-length(temp_2)
writers_split<-split(drwho_writers,drwho_writers$writer)
for(i in writers_split){
temp_2<-c()
len<-length(temp_2)
for(j in i$story_number){
temp_3<-filter(drwho_episodes,drwho_episodes$story_number==j)
temp_2[len+1]<-temp_3$uk_viewers
}
i<-cbind(i,temp_2)
}
View(writers_split)
?cbind
writers_split<-split(drwho_writers,drwho_writers$writer)
for(i in writers_split){
temp_2<-c()
len<-length(temp_2)
for(j in i$story_number){
temp_3<-filter(drwho_episodes,drwho_episodes$story_number==j)
temp_2[len+1]<-temp_3$uk_viewers
}
i<-cbind(i,uk_viewers=temp_2)
}
View(writers_split)
writers_split
writers_split<-split(drwho_writers,drwho_writers$writer)
for(i in writers_split){
temp_2<-c()
len<-length(temp_2)
for(j in i$story_number){
temp_3<-filter(drwho_episodes,drwho_episodes$story_number==j)
temp_2[len+1]<-temp_3$uk_viewers
len<-len+1
}
i<-cbind(i,uk_viewers=temp_2)
}
View(writers_split)
View(writers_split)
rm("writers_split")
rm(len)
rm(j)
rm(temp_2)
rm(no_of_tuples)
drwho_episodes <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-11-28/drwho_episodes.csv')
drwho_directors <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-11-28/drwho_directors.csv')
drwho_writers <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-11-28/drwho_writers.csv')
drwho_episodes<-drwho_episodes[,-c(1)] #removed era column cause its not needed
summary(drwho_episodes$rating) #for finding the statistics of rating of the episodes
summary(drwho_episodes$uk_viewers) #for finding the statistics of no of viewers
summary(drwho_episodes$duration) #for finding the statistics of duration of episodes
drwho_episodes_splits<-split(drwho_episodes,drwho_episodes$type)
count_episode<-0 #for determining the no of episodes which were of type "episode"
count_special<-0
for(i in drwho_episodes_splits){
if(i$type[1]=="episode"){
count_episode<-count(i)$n
}
else{
count_special<-count(i)$n
}
}
temp<-drwho_episodes$first_aired #dates of airing
viewer_count<-drwho_episodes$uk_viewers # no of viewers
plot(temp,viewer_count,type = "l",col="red",main="date aired vs viewer count",xlab="dates",ylab="viewers (in millions)",cex=0.3,xlim=c(min(temp),max(temp)))
uk_view_vec<-c()
uk_view_vec<-c()
for(i in drwho_writers){
len<-length(uk_view_vec)
temp_2<-filter(drwho_episodes,drwho_episodes$story_number==i$story_number)
uk_view_vec[len+1]<-temp_2$uk_viewers
}
uk_view_vec<-c()
for(i in drwho_writers){
len<-length(uk_view_vec)
temp_2<-filter(drwho_episodes,drwho_episodes$story_number==i[1])
uk_view_vec[len+1]<-temp_2$uk_viewers
}
uk_view_vec<-c()
for(i in drwho_writers){
len<-length(uk_view_vec)
print(i$story_number)
# temp_2<-filter(drwho_episodes,drwho_episodes$story_number==i[1])
# uk_view_vec[len+1]<-temp_2$uk_viewers
}
uk_view_vec<-c()
for(i in drwho_writers){
len<-length(uk_view_vec)
print(i)
# temp_2<-filter(drwho_episodes,drwho_episodes$story_number==i[1])
# uk_view_vec[len+1]<-temp_2$uk_viewers
}
for(i in drwho_writers){
len<-length(uk_view_vec)
print(i[1])
# temp_2<-filter(drwho_episodes,drwho_episodes$story_number==i[1])
# uk_view_vec[len+1]<-temp_2$uk_viewers
}
for(i in drwho_writers){
len<-length(uk_view_vec)
temp_2<-filter(drwho_episodes,drwho_episodes$story_number==i[i,1])
uk_view_vec[len+1]<-temp_2$uk_viewers
}
for(i in drwho_writers){
len<-length(uk_view_vec)
temp_2<-filter(drwho_episodes,drwho_episodes$story_number==i[_,1])
uk_view_vec[len+1]<-temp_2$uk_viewers
}
for(i in drwho_writers){
len<-length(uk_view_vec)
temp_2<-filter(drwho_episodes,drwho_episodes$story_number==drwho_writers[i,1])
uk_view_vec[len+1]<-temp_2$uk_viewers
}
uk_view_vec<-c()
temp_2<-filter(drwho_episodes,drwho_episodes$story_number==drwho_writers$story_number)
View(temp_2)
class(drwho_writers)
for(i in drwho_writers){
print(i)
print("\n")
}
for(i in drwho_writers){
print(i[1])
}
for(i in drwho_writers){
print(i[1][1])
}
for(i in drwho_writers){
print(i$story_number)
}
for(i in drwho_writers$story_number){
print(i)
}
temp_2<-c()
temp_2<-c()
for(i in drwho_writers$story_number){
len<-length(temp_2)
temp_2[len+1]<-filter(drwho_episodes,drwho_episodes$story_number==i)$uk_viewers
}
drwho_writers<-cbind(drwho_writers,uk_viewers=temp_2)
drwho_writers_split<-drwho_writers %>% group_by(drwho_writers$writer) %>% sum(drwho_writers$uk_viewers)
